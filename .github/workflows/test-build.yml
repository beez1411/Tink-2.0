name: Test Build (Debug)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  test-build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Debug environment
      run: |
        echo "=== ENVIRONMENT DEBUG ==="
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Current directory: $(Get-Location)"
        echo "Directory contents:"
        Get-ChildItem | Format-Table Name, Length, LastWriteTime
        echo "Environment variables:"
        Get-ChildItem env: | Where-Object { $_.Name -like "*NODE*" -or $_.Name -like "*NPM*" } | Format-Table Name, Value
      shell: powershell
        
    - name: Install dependencies
      run: |
        Write-Output "Installing dependencies..."
        npm install
        Write-Output "Dependencies installed successfully"
        Write-Output "Checking node_modules..."
        if (Test-Path "node_modules") { 
          Write-Output "✓ node_modules exists" 
        } else { 
          Write-Output "✗ node_modules missing" 
        }
      shell: powershell
        
    - name: Test electron-builder without publishing
      run: |
        Write-Output "Testing electron-builder build..."
        Write-Output "Running: npx electron-builder --publish=never"
        npx electron-builder --publish=never --win --x64
        Write-Output "Build test completed successfully"
      shell: powershell
      env:
        DEBUG: electron-builder
        NODE_ENV: production
        
    - name: List results
      run: |
        Write-Output "Checking build results..."
        if (Test-Path "dist") {
          Write-Output "✓ dist directory exists"
          Get-ChildItem -Path "dist" -Recurse | Format-Table Name, Length, LastWriteTime
        } else {
          Write-Output "✗ dist directory missing"
        }
      shell: powershell 