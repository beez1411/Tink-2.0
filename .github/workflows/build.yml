name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v2.0.1)'
        required: true
        default: 'v2.0.1'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Verify required files
      run: |
        echo "Checking for required files..."
        if (Test-Path "License.txt") { echo "✓ License.txt found" } else { echo "✗ License.txt missing"; exit 1 }
        if (Test-Path "assets/icon.ico") { echo "✓ Icon file found" } else { echo "✗ Icon file missing"; exit 1 }
        if (Test-Path "main.js") { echo "✓ main.js found" } else { echo "✗ main.js missing"; exit 1 }
        if (Test-Path "package.json") { echo "✓ package.json found" } else { echo "✗ package.json missing"; exit 1 }
      shell: powershell
        
    - name: Install dependencies
      run: npm ci
      
    - name: Show build configuration
      run: |
        echo "Current directory: $(Get-Location)"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Package.json version:"
        Get-Content package.json | Select-String '"version"'
        echo "Environment variables:"
        Get-ChildItem env: | Where-Object { $_.Name -like "*GH*" -or $_.Name -like "*GITHUB*" } | Format-Table Name, Value
      shell: powershell
      
    - name: Build application
      run: |
        echo "Starting build process..."
        npm run dist
        echo "Build completed successfully"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder
        
    - name: List build artifacts
      run: |
        echo "Listing dist directory contents:"
        if (Test-Path "dist") {
          Get-ChildItem -Path "dist" -Recurse | Format-Table Name, Length, LastWriteTime
          echo "Build artifacts created successfully"
        } else {
          echo "ERROR: dist directory not found!"
          exit 1
        }
      shell: powershell
        
    - name: Release to GitHub (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "Starting release process..."
        npm run release
        echo "Release completed successfully"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        retention-days: 30

# Removed redundant create-release job - electron-builder handles GitHub releases when using npm run release 